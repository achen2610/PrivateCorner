//
//  LockScreenViewController.swift
//  PrivateCorner
//
//  Created by a on 3/9/17.
//  Copyright (c) 2017 MrAChen. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit

class LockScreenViewController: UIViewController {
    var buttonArray = [UIButton]()
    var startState: LockScreenScene.StartState!
    var passcodeState: LockScreenScene.PasscodeState!
    
    @IBOutlet weak var backgroundImageView: UIImageView!
    @IBOutlet weak var PasscodeView: PasscodeView!
    @IBOutlet weak var OneButton: UIButton!
    @IBOutlet weak var TwoButton: UIButton!
    @IBOutlet weak var ThreeButton: UIButton!
    @IBOutlet weak var FourButton: UIButton!
    @IBOutlet weak var FiveButton: UIButton!
    @IBOutlet weak var SixButton: UIButton!
    @IBOutlet weak var SevenButton: UIButton!
    @IBOutlet weak var EightButton: UIButton!
    @IBOutlet weak var NineButton: UIButton!
    @IBOutlet weak var ZeroButton: UIButton!
    @IBOutlet weak var TitleLabel: UILabel!
    @IBOutlet weak var CancelButton: UIButton!
    @IBOutlet weak var LogoButton: UIButton!
    
    fileprivate var inputString: String = "" {
        didSet {
            PasscodeView.inputDotCount = inputString.characters.count
            checkInputComplete()
        }
    }
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()

    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        configureSubviews()
    }
    
    // MARK: Event handling
    
    private func configureSubviews() {
        
        backgroundImageView.image = UIImage.init(named: "data-security-tips.jpg")
        blurImage()
        
        PasscodeView.totalDotCount = 4
        
        buttonArray.append(ZeroButton)
        buttonArray.append(OneButton)
        buttonArray.append(TwoButton)
        buttonArray.append(ThreeButton)
        buttonArray.append(FourButton)
        buttonArray.append(FiveButton)
        buttonArray.append(SixButton)
        buttonArray.append(SevenButton)
        buttonArray.append(EightButton)
        buttonArray.append(NineButton)

        for button in buttonArray {
            self.styleButton(button: button)
            button.tag = buttonArray.index(of: button)!
            button.addTarget(self, action: #selector(clickedNumberButton(sender:)), for: .touchUpInside)
        }
        self.styleButton(button: CancelButton)
        self.styleButton(button: LogoButton)
        CancelButton.addTarget(self, action: #selector(clickedCancelButton(sender:)), for: .touchUpInside)
        LogoButton.titleLabel?.numberOfLines = 2;

        let firstInstall = UserDefaults.standard.bool(forKey: "firstInstall")
        if !firstInstall {
            TitleLabel.text = "NHẬP MẬT MÃ MỚI LẦN 1"
            startState = .FirstStart
            passcodeState = .FirstInput
        } else {
            startState = .NotFirst
        }
    }
    
    private func blurImage() {
        if !UIAccessibilityIsReduceTransparencyEnabled() {
            backgroundImageView.backgroundColor = UIColor.clear
            
            let blurEffect = UIBlurEffect(style: UIBlurEffectStyle.dark)
            let blurEffectView = UIVisualEffectView(effect: blurEffect)
            //always fill the view
            blurEffectView.frame = backgroundImageView.bounds
            blurEffectView.autoresizingMask = [.flexibleWidth, .flexibleHeight]
            
            backgroundImageView.addSubview(blurEffectView) //if you have more UIViews, use an insertSubview API to place it where needed
        }
    }
    
    private func styleButton(button: UIButton) {
        button.layer.cornerRadius = 5.0;
        button.layer.borderColor = UIColor.white.cgColor
        button.layer.borderWidth = 1.0;
    }
    
    open func wrongPassword() {
        PasscodeView.shakeAnimationWithCompletion {
            self.clearInput()
        }
    }
    
    open func clearInput() {
        inputString = ""
    }
    
    open func checkInputComplete() {
        if inputString.characters.count == PasscodeView.totalDotCount {
            if validation(inputString) {
                validationSuccess()
            } else {
                validationFail()
            }
        }
    }
    
    // MARK: Navigation
    func navigateToHomeScreen() {
        let mainStoryboard: UIStoryboard = UIStoryboard(name: "Main", bundle: nil)
        let tabBarController = mainStoryboard.instantiateViewController(withIdentifier: "tabBarController") as! TabBarController
        
        self.navigationController?.pushViewController(tabBarController, animated: true)
    }

    // MARK: Display logic
    
    
    // MARK: Selector logic
    
    func clickedNumberButton(sender: UIButton!) {
        print("clicked \(sender.tag) Button")
        
        guard inputString.characters.count < PasscodeView.totalDotCount else {
            return
        }
        inputString += "\(sender.tag)"
    }
    
    func clickedCancelButton(sender: UIButton!) {
        print("clicked Cancel Button")
        
        guard inputString.characters.count > 0 && !PasscodeView.isFull else {
            return
        }
        inputString = String(inputString.characters.dropLast())
    }

}

private extension LockScreenViewController {
    func validation(_ input: String) -> Bool {
        return input == "1234"
    }
    
    func validationSuccess() {
        print("*️⃣ success!")
        navigateToHomeScreen()
    }
    
    func validationFail() {
        print("*️⃣ failure!")
        wrongPassword()
    }
}

