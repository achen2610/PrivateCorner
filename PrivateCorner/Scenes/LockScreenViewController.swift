//
//  LockScreenViewController.swift
//  PrivateCorner
//
//  Created by a on 3/9/17.
//  Copyright (c) 2017 MrAChen. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit

protocol LockScreenViewControllerInput {
    
}

protocol LockScreenViewControllerOutput {
    
}

class LockScreenViewController: UIViewController, LockScreenViewControllerInput {
    
    var output: LockScreenViewControllerOutput!
    var router: LockScreenRouter!
    var buttonArray = [UIButton]()
    var startState: LockScreenScene.StartState!
    var passcodeState: LockScreenScene.PasscodeState!
    
    @IBOutlet weak var backgroundImageView: UIImageView!
    @IBOutlet weak var OneButton: UIButton!
    @IBOutlet weak var TwoButton: UIButton!
    @IBOutlet weak var ThreeButton: UIButton!
    @IBOutlet weak var FourButton: UIButton!
    @IBOutlet weak var FiveButton: UIButton!
    @IBOutlet weak var SixButton: UIButton!
    @IBOutlet weak var SevenButton: UIButton!
    @IBOutlet weak var EightButton: UIButton!
    @IBOutlet weak var NineButton: UIButton!
    @IBOutlet weak var TenButton: UIButton!
    @IBOutlet weak var ElevenButton: UIButton!
    @IBOutlet weak var TwelveButton: UIButton!
    @IBOutlet weak var TitleLabel: UILabel!
    @IBOutlet weak var AcceptButton: UIButton!
    @IBOutlet weak var CancelButton: UIButton!
    
    // MARK: Object lifecycle
    
    override func awakeFromNib() {
        super.awakeFromNib()
        LockScreenConfigurator.sharedInstance.configure(viewController: self)
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        configureSubviews()
    }
    
    // MARK: Event handling
    
    func configureSubviews() {
        
        backgroundImageView.image = UIImage.init(named: "data-security-tips.jpg")
        blurImage()
        
        buttonArray.append(OneButton)
        buttonArray.append(TwoButton)
        buttonArray.append(ThreeButton)
        buttonArray.append(FourButton)
        buttonArray.append(FiveButton)
        buttonArray.append(SixButton)
        buttonArray.append(SevenButton)
        buttonArray.append(EightButton)
        buttonArray.append(NineButton)
        buttonArray.append(TenButton)
        buttonArray.append(ElevenButton)
        buttonArray.append(TwelveButton)
        
        for button in buttonArray {
            button.layer.cornerRadius = 5.0;
            button.layer.borderColor = UIColor.white.cgColor
            button.layer.borderWidth = 1.0;
            button.tag = buttonArray.index(of: button)! + 1
            button.addTarget(self, action: #selector(pressed(sender:)), for: .touchUpInside)
        }
        
        CancelButton.layer.cornerRadius = 5.0
        AcceptButton.layer.cornerRadius = 5.0

        let firstInstall = UserDefaults.standard.bool(forKey: "firstInstall")
        if !firstInstall {
            TitleLabel.text = "NHẬP MẬT MÃ MỚI LẦN 1"
            startState = .FirstStart
            passcodeState = .FirstInput
        } else {
            startState = .NotFirst
        }
    }
    
    func blurImage() {
        if !UIAccessibilityIsReduceTransparencyEnabled() {
            backgroundImageView.backgroundColor = UIColor.clear
            
            let blurEffect = UIBlurEffect(style: UIBlurEffectStyle.dark)
            let blurEffectView = UIVisualEffectView(effect: blurEffect)
            //always fill the view
            blurEffectView.frame = backgroundImageView.bounds
            blurEffectView.autoresizingMask = [.flexibleWidth, .flexibleHeight]
            
            backgroundImageView.addSubview(blurEffectView) //if you have more UIViews, use an insertSubview API to place it where needed
        }
    }

    // MARK: Display logic
    
    
    // MARK: Selector logic
    
    func pressed(sender: UIButton!) {
        print("\(sender.tag)")
    }
    
    @IBAction func clickResetButton(_ sender: Any) {
        
    }

    @IBAction func clickOKButton(_ sender: Any) {
        router.navigateToHomeScreen()
    }

}

//This should be on configurator but for some reason storyboard doesn't detect ViewController's name if placed there
extension LockScreenViewController: LockScreenPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router.passDataToNextScene(for: segue)
    }
}
