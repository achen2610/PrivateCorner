//
//  ImportViewController.swift
//  PrivateCorner
//
//  Created by a on 3/30/17.
//  Copyright (c) 2017 MrAChen. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit

class ImportViewController: UIViewController {

    @IBOutlet weak var importCollectionView: UICollectionView!

    // MARK: Object lifecycle
    
    struct cellIdentifiers {
        static let importCell = "importCell"
    }
    
    struct cellLayout {
        static let itemsPerRow: CGFloat = 2
        static let widthPerItem: CGFloat = 100 * kScale
        static let sectionInsets: UIEdgeInsets = UIEdgeInsets(top: 16, left: 16, bottom: 16, right: 16)
    }
    
    override func awakeFromNib() {
        super.awakeFromNib()

    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        title = Key.Screen.importPhoto
        configureCollecntionViewOnLoad()
    }
    
    // MARK: Event handling
    
    func configureCollecntionViewOnLoad() {
        let nibName = UINib(nibName: "ImportCell", bundle:Bundle.main)
        importCollectionView.register(nibName, forCellWithReuseIdentifier: cellIdentifiers.importCell)
    }
    
    func selectedImportDetailAtIndex(index: Int) {
        switch index {
        case 0:
            //Photo Library
            break
        case 1:
            //Camera
            break
        case 2:
            //iTunes Syncing
            break
        case 3:
            //Wireless Syncing
            break
            
        default:
            break
        }
    }
    
    func selectedImportDetail(sender: UIButton) {
        let mainStoryboard: UIStoryboard = UIStoryboard(name: "Main", bundle: nil)
        let navi  = mainStoryboard.instantiateViewController(withIdentifier: "ChooseAlbum") as! UINavigationController
        let controller = navi.visibleViewController as! ChooseAlbumViewController
        
        let index = sender.tag
        switch index {
        case 0:
            //Photo Library
            controller.isPhotoLibrary = true
            present(navi, animated: true, completion: nil)
            break
        case 1:
            //Camera
            controller.isPhotoLibrary = false
            present(navi, animated: true, completion: nil)
            break
        case 2:
            //iTunes Syncing
            break
        case 3:
            //Wireless Syncing
            break
            
        default:
            break
        }
    }

}

