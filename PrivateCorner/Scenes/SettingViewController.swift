//
//  SettingViewController.swift
//  PrivateCorner
//
//  Created by a on 3/15/17.
//  Copyright (c) 2017 MrAChen. All rights reserved.
//
//  This file was generated by the Clean Swift HELM Xcode Templates
//

import UIKit
import CDAlertView

class SettingViewController: UITableViewController {

    @IBOutlet weak var settingTable: UITableView!
    // MARK: Object lifecycle
    
    struct cellIdentifiers {
        static let settingDetailCell    = "SettingDetailCell"
        static let settingIndicatorCell = "SettingIndicatorCell"
    }
    
    var array = [["", ["Version", "1.0"]],
                 ["", "Passcode", "Usability","How to use"],
                 ["", ["Author", "MrAchen"]]]

    override func awakeFromNib() {
        super.awakeFromNib()

    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        title = Key.Screen.setting
        navigationItem.backBarButtonItem = UIBarButtonItem(title: "", style: .plain, target: nil, action: nil)
        configureTableViewOnLoad()
        
        NotificationCenter.default.addObserver(self, selector: #selector(performSeguePasscodeViewWithNotification(noti:)), name: Notification.Name(rawValue: Key.String.notiPerformSeguePasscodeView), object: nil)
        NotificationCenter.default.addObserver(self, selector: #selector(showAlertWhenChangePassSuccess(noti:)), name: Notification.Name(rawValue: Key.String.notiAlertChangePassSuccess), object: nil)
    }
    
    
    // MARK: Event handling
    
    func configureTableViewOnLoad() {
        var nibName = UINib(nibName: "SettingDetailCell", bundle:Bundle.main)
        settingTable.register(nibName, forCellReuseIdentifier: cellIdentifiers.settingDetailCell)
        nibName = UINib(nibName: "SettingIndicatorCell", bundle:Bundle.main)
        settingTable.register(nibName, forCellReuseIdentifier: cellIdentifiers.settingIndicatorCell)
    }
    
    func selectedSettingAtIndex(index: Int) {
        switch index {
        case 0:
            //Passcode
            let mainStoryboard: UIStoryboard = UIStoryboard(name: "Main", bundle: nil)
            let lockScreen  = mainStoryboard.instantiateViewController(withIdentifier: "LockScreen") as! LockScreenViewController
            let viewModel = LockScreenViewModel(delegate: lockScreen, totalDotCount: 6)
            viewModel.passcodeState = .RequirePass
            viewModel.passcodeSaved = UserDefaults.standard.value(forKey: "passcodeSaved") as? String
            lockScreen.viewModel = viewModel
            lockScreen.isHeroEnabled = true
            lockScreen.heroModalAnimationType = .fade
            present(lockScreen, animated: true, completion: nil)
            break
        case 1:
            //Usability
            self.performSegue(withIdentifier: "segueUsabilityViewController", sender: nil)
            break
        case 2:
            //How to use
            self.performSegue(withIdentifier: "segueHowToUseViewController", sender: nil)
            break
        default:
            break
        }
    }

    func performSeguePasscodeViewWithNotification(noti: Notification) {
        self.performSegue(withIdentifier: "seguePasscodeViewController", sender: nil)
    }
    
    func showAlertWhenChangePassSuccess(noti: Notification) {
        let alert = CDAlertView(title: nil, message: "Change passcode success!", type: .success)
        alert.show()
        
        delay(1.0, execute: { 
            alert.hide(isPopupAnimated: true)
        })
    }
}

